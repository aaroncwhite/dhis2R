tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
freq[[n]][[a]] <- ggpie(tbl, 'answer', 'Freq')
}
}
freq[[2]][[2]]
freq[[2]][[1]]
freq[[1]][[1]]
freq[[1]][[1]] + ggtitle('test')
test$t1 <- freq[[1]][[1]]
test$t2 <- freq[[1]][[2]]
multiplot(test$t1, test$t2)
multiplot(test$t1, test$t2, cols2)
multiplot(test$t1, test$t2, cols=2)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
freq <- freq.bak
freq <- freq[[path]] # subset down the data to just the path we're looking at
labels <- unlist(ifelse(path=='piped_water' | path==3,
list(c("everyday","4-6/wk","1-3/mo","never","don't know")),
list(c(">10/mo","6-10/mo","1-5/mo","never","don't know"))
))
plot_data <- data.frame(matrix(nrow=0, ncol=4))
for (n in neighborhoods) { # freq is now subset to just the neighborhoods for a specific path
for (a in ages) {
tbl <- as.data.frame(table('answer'=freq[[n]][[a]]))
tbl$answer <- labels[tbl$answer]
tbl <- cbind.data.frame('neighborhood'= paste0('Neighborhood ', n),
'age' = ifelse(a == 1, 'Adults', 'Children'),
tbl)
tbl$breaks <- cumsum(tbl$Freq) - tbl$Freq / 2
tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
freq[[n]][[a]] <- ggpie(tbl, 'answer', 'Freq', ifelse(a == 1, 'Adults', 'Children'))
}
}
freq[[1]][[1]]
test$t1 <- freq[[1]][[1]]
test$t2 <- freq[[1]][[2]]
multiplot(test$t1, test$t2, cols=2)
multiplot(plotlist = test, cols=2)
freq <- freq.bak
freq <- freq[[path]] # subset down the data to just the path we're looking at
labels <- unlist(ifelse(path=='piped_water' | path==3,
list(c("everyday","4-6/wk","1-3/mo","never","don't know")),
list(c(">10/mo","6-10/mo","1-5/mo","never","don't know"))
))
plot_data <- data.frame(matrix(nrow=0, ncol=4))
for (n in neighborhoods) { # freq is now subset to just the neighborhoods for a specific path
for (a in ages) {
tbl <- as.data.frame(table('answer'=freq[[n]][[a]]))
tbl$answer <- labels[tbl$answer]
tbl <- cbind.data.frame('neighborhood'= paste0('Neighborhood ', n),
'age' = ifelse(a == 1, 'Adults', 'Children'),
tbl)
tbl$breaks <- cumsum(tbl$Freq) - tbl$Freq / 2
tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
freq[[n]][[a]] <- ggpie(tbl, 'answer', 'Freq', ifelse(a == 1, 'Adults', 'Children'))
}
}
test$t1 <- freq[[1]][[1]]
test$t2 <- freq[[1]][[2]]
test
ages
ages = 1
freq <- freq.bak
freq <- freq[[path]] # subset down the data to just the path we're looking at
labels <- unlist(ifelse(path=='piped_water' | path==3,
list(c("everyday","4-6/wk","1-3/mo","never","don't know")),
list(c(">10/mo","6-10/mo","1-5/mo","never","don't know"))
))
plot_data <- data.frame(matrix(nrow=0, ncol=4))
for (n in neighborhoods) { # freq is now subset to just the neighborhoods for a specific path
for (a in ages) {
tbl <- as.data.frame(table('answer'=freq[[n]][[a]]))
tbl$answer <- labels[tbl$answer]
tbl <- cbind.data.frame('neighborhood'= paste0('Neighborhood ', n),
'age' = ifelse(a == 1, 'Adults', 'Children'),
tbl)
tbl$breaks <- cumsum(tbl$Freq) - tbl$Freq / 2
tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
freq[[n]][[a]] <- ggpie(tbl, 'answer', 'Freq', ifelse(a == 1, 'Adults', 'Children'))
}
}
test$t1 <- freq[[1]][[1]]
test$t2 <- freq[[2]][[1]]
test
multiplot(plotlist = test)
multiplot(plotlist = test, cols=2)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
freq <- freq.bak
freq <- freq[[path]] # subset down the data to just the path we're looking at
labels <- unlist(ifelse(path=='piped_water' | path==3,
list(factor("everyday","4-6/wk","1-3/mo","never","don't know")),
list(factor(">10/mo","6-10/mo","1-5/mo","never","don't know"))
))
plot_data <- data.frame(matrix(nrow=0, ncol=4))
for (n in neighborhoods) { # freq is now subset to just the neighborhoods for a specific path
for (a in ages) {
tbl <- as.data.frame(table('answer'=freq[[n]][[a]]))
tbl$answer <- labels[tbl$answer]
tbl <- cbind.data.frame('neighborhood'= paste0('Neighborhood ', n),
'age' = ifelse(a == 1, 'Adults', 'Children'),
tbl)
tbl$breaks <- cumsum(tbl$Freq) - tbl$Freq / 2
tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
freq[[n]][[a]] <- ggpie(tbl, 'answer', 'Freq', ifelse(a == 1, 'Adults', 'Children'))
}
}
test$t1 <- freq[[1]][[1]]
test$t2 <- freq[[2]][[1]]
multiplot(plotlist = test, cols=2)
multiplot(test$t1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
plot_pathPieCharts(calculate_householdFreq(household_data), 3, 1:2, 1:2)
plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
lapply(a, function(x) lapply(x, function(i) i))
multiplot(plotlist=lapply(a, function(x) lapply(x, function(i) i)),layout = c(1,2,3,4))
multiplot(plotlist=lapply(a, function(x) lapply(x, function(i) i)),layout = matrix(c(1,2,3,4)))
multiplot(plotlist=lapply(a, function(x) lapply(x, function(i) i)),cols=2)
multiplot(plotlist=lapply(a, function(x) lapply(x, function(i) i)),layout = matrix(1:4))
multiplot(plotlist=lapply(a, function(x) lapply(x, function(i) i)),cols=1
)
a <- lapply(a, function(x) lapply(x, function(i) i))
a
unlist(a)
a
a[[1]]
a[[1]][1]
a <- lapply(a, function(x) lapply(x, function(i) i[1]))
a
a <- lapply(a, function(x) lapply(x, function(i) print(i)))
sub_plots <- list()
for (a in ages) {
tbl <- as.data.frame(table('answer'=freq[[n]][[a]]))
tbl$answer <- labels[tbl$answer]
tbl <- cbind.data.frame('neighborhood'= paste0('Neighborhood ', n),
'age' = ifelse(a == 1, 'Adults', 'Children'),
tbl)
tbl$breaks <- cumsum(tbl$Freq) - tbl$Freq / 2
tbl$labels = paste0(round(tbl$Freq / sum(tbl$Freq) *
100, 1), "%")
plot_data <- rbind(plot_data, tbl)
sub_plots <- list(ggpie(tbl, 'answer', 'Freq', ifelse(a == 1, 'Adults', 'Children')))
}
test
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
ages
ages <- c(1,2)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
a$neighborhood1
grid.draw(a$neighborhood1)
test$t1
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
a$neighborhood1
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 3, c(1:2), c(1:2))
grid.draw(a$neighborhood1)
a <- plot_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
grid.draw(a$neighborhood1)
frame()
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
neighborhoods
neighborhoods=0
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
a$neighborhood2
grid.draw(a$neighborhood2)
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Dropbox/Haiti/Costing/Shiny Analyzer/helpers.R')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
a$neighborhood1
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a$neighborhood1
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
grid.draw(a$neighborhood1)
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
grid.draw(a$neighborhood1)
flush()
frame()
grid.draw(a$neighborhood1)
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
a$neighborhood1$grobs
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
a$neighborhood1$adults
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
length(a)
arrangeGrob(grobs=a, ncol=2, nrows=2)
grid.draw(arrangeGrob(grobs=a, ncol=2, nrows=2))
frame()
grid.draw(arrangeGrob(grobs=a, ncol=2, nrows=2))
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
source('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny/analysis_helpers.R')
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
a$neighborhood1
frame()
grid.draw(a$neighborhood1)
a$neighborhood1
a <- paste0('plot', 1:2)
grid.draw[1]
grid.draw(a[1])
grid.draw(a[[1]])
a
a <- create_pathPieCharts(calculate_householdFreq(household_data), 2, c(1:2), c(1:2))
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
grid.draw(a[1])
a
grid.draw(a[[1]])
frame()
grid.draw(a[[1]])
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
shiny::runApp('C:/Users/awhite/Google Drive/EpiTech/Projects/CGSW/RAT-shiny')
htmlParse(remDr$getPageSource()[[1]])
library(RSelenium)
RSelenium::startServer()
remDr <- remoteDriver(remoteServerAddr = 'localhost',
port = 4444,
browserName = 'firefox')
remDr$open()
Sys.sleep(3)
# go to the login page
remDr$navigate('https://donate.pih.org/ctl/Core/AdminLogin')
Sys.sleep(1)
# enter credentials and submit
remDr$findElement(using='xpath', "//*/input[@id= 'email']")$sendKeysToElement(list('awhite@pih.org'))
remDr$findElement(using='xpath', "//*/input[@id= 'password']")$sendKeysToElement(list('White0818'))
remDr$findElement(using='xpath', "//*/input[@id= 'formSubmit']")$clickElement()
# base url
url = 'https://donate.pih.org/modules/maillist/admin/mailing_preview_html.php?mailing_id='
remDr$navigate(paste0(url, 1470))
mailings <- read.csv('c:/Users/awhite/Downloads/mailing_export_20160329190810.csv')
generic <- read.csv('c:/Users/awhite/Downloads/mailing_export_20160329191551.csv')
mailings$source <- htmlParse(remDr$getPageSource()[[1]])
mailings$source <- list(htmlParse(remDr$getPageSource()[[1]]))
head(mailings)
mailings
mailings$source
a <- htmlParse(remDr$getPageSource()[[1]])
a
write(a, 'test.hmtl')
unlist(xpathApply(a, '//p', xmlValue))
remDr$navigate(paste0(url, 1466))
a <- htmlParse(remDr$getPageSource()[[1]])
unlist(xpathApply(a, '//p', xmlValue))
a
unlist(xpathApply(a, '//td', xmlValue))
install.packages('R2HTML')
library(R2HTML)
HTML(a)
HTML(a,file = 'test.html')
HTML(a,file = 'test.html')
mailings[grep('20150127', mailings$Mailing.Name),]
mailings[grep('20150127malawi_EM100_qd', mailings$Mailing.Name),]
mailings[grep('2015 01 27', mailings$Mailing.Name),]
remDr$navigate(paste0(url, 1090))
remDr$open()
# wait a few seconds for the window to open
Sys.sleep(3)
# go to the login page
remDr$navigate('https://donate.pih.org/ctl/Core/AdminLogin')
Sys.sleep(1)
# enter credentials and submit
remDr$findElement(using='xpath', "//*/input[@id= 'email']")$sendKeysToElement(list('awhite@pih.org'))
remDr$findElement(using='xpath', "//*/input[@id= 'password']")$sendKeysToElement(list('White0818'))
remDr$findElement(using='xpath', "//*/input[@id= 'formSubmit']")$clickElement()
url = 'https://donate.pih.org/modules/maillist/admin/mailing_preview_html.php?mailing_id='
remDr$navigate(paste0(url, 1090))
a <- htmlParse(remDr$getPageSource()[[1]])
a
HTML(a,file = 'test.html')
remDr$navigate(paste0('https://donate.pih.org/ctl/Maillist/Edit?mailing_id=', 1090))
a <- htmlParse(remDr$getPageSource()[[1]])
HTML(a,file = 'test.html')
sourceCode <- remDr$findElement(using='id', 'campaign_source_code')
sourceCode <- remDr$findElement(using='xpath', "//*/input[@id= 'campaign_source_code']")
sourceCode
sourceCode$getElementText()
remDr$navigate(paste0(url, 1090))
a <- htmlParse(remDr$getPageSource())
a <- htmlParse(remDr$getPageSource()[[1]])
a <- htmlParse(remDr$getPageSource()[[2]])
library(XML)
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
a
grep('source', a)
class(a)
plain.text <- xpathSApply(a, "//text()[not(ancestor::script)][not(ancestor::style)][not(ancestor::noscript)][not(ancestor::form)]", xmlValue)
plain.text
cat(paste(plain.text, collapse = " "))
a
library(rvest)
test <- html(x = paste0(url, 1070))
test <- read_html(x = paste0(url, 1070))
test
test <- read_html(a)
readHTMLTable(a)
setwd("C:/Users/awhite/Dropbox/Haiti/HUM/HUM Dashboards/scripts")
if (!file.exists("scraped")) {
dir.create(file.path("./scraped"))
}
setwd("C:/Users/awhite/Dropbox")
if (!file.exists("scraped")) {
dir.create(file.path("./scraped"))
}
print(m)
m = 1
print(mailings[m,1])
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
m = 1470
print(m)
remDr$navigate(paste0(url, m))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0(m,'.html'))
HTML(a,file = paste0('scraped/'m,'.html'))
HTML(a,file = paste0('scraped/',m,'.html'))
print(mailings[m, 1])
m
m=1
print(mailings[m, 1])
remDr$navigate(paste0(url, mailings[m,1]))
Sys.sleep(runif(1,1,3))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',mailings[m,1],'.html'))
m=2
print(mailings[m, 1])
remDr$navigate(paste0(url, mailings[m,1]))
Sys.sleep(runif(1,1,3))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',mailings[m,1],'.html'))
m=3
print(mailings[m, 1])
remDr$navigate(paste0(url, mailings[m,1]))
Sys.sleep(runif(1,1,3))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',mailings[m,1],'.html'))
View(mailings)
runif(1307,2,6)
sum(runif(1307,2,6))
sum(runif(1307,2,6))/60
sum(runif(1307,2,6))/60/60
sum(runif(1307,2,6))/60/60
sum(runif(1307,2,6))/60/60
sum(runif(1307,2,6))/60/60
sum(runif(1307,2,6))/60/60
sum(runif(1307,2,6))/60/60
test <- rep(1000, sum(runif(1307,2,6))/60/60)
test <- rep(sum(runif(1307,2,6))/60/60, 1000)
mean(test)
sapply(1:1000, function() sum(runif(1307,2,3))/60/60)
sapply(1:1000, function(x) sum(runif(1307,2,3))/60/60)
test <- c()
sapply(sum(runif(1307,2,3))/60/60), function(x) test <- c(test, x))
sapply(sum(runif(1307,2,3))/60/60), function(x) c(test, x))
for (1 in 1:1000) {test <- c(test, sum(runif(1307,2,3))/60/60))}
for (i in 1:1000) {test <- c(test, sum(runif(1307,2,3))/60/60))}
for (i in 1:1000) {test <- c(test, sum(runif(1307,2,3))/60/60)}
mean(test)
test <- c()
for (i in 1:1000) {test <- c(test, sum(runif(1307,1,3))/60/60)}
mean(test)
# start the engine
RSelenium::startServer()
remDr <- remoteDriver(remoteServerAddr = 'localhost',
port = 4444,
browserName = 'firefox')
remDr$open()
# wait a few seconds for the window to open
Sys.sleep(3)
# go to the login page
remDr$navigate('https://donate.pih.org/ctl/Core/AdminLogin')
Sys.sleep(1)
# enter credentials and submit
remDr$findElement(using='xpath', "//*/input[@id= 'email']")$sendKeysToElement(list('awhite@pih.org'))
remDr$findElement(using='xpath', "//*/input[@id= 'password']")$sendKeysToElement(list('White0818'))
remDr$findElement(using='xpath', "//*/input[@id= 'formSubmit']")$clickElement()
url = 'https://donate.pih.org/modules/maillist/admin/mailing_preview_html.php?mailing_id='
# get the mailing ids already downloaded
for (m in 1:length(mailings$Mailing.ID)) {
print(mailings[m, 1])
remDr$navigate(paste0(url, mailings[m,1]))
Sys.sleep(runif(1,2,4))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',mailings[m,1],'.html'))
}
for (m in 1:length(generic$Mailing.ID)) {
print(generic[m, 1])
remDr$navigate(paste0(url, generic[m,1]))
Sys.sleep(runif(1,2,4))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',generic[m,1],'.html'))
}
remDr$open()
remDr$navigate('https://donate.pih.org/ctl/Core/AdminLogin')
Sys.sleep(1)
# enter credentials and submit
remDr$findElement(using='xpath', "//*/input[@id= 'email']")$sendKeysToElement(list('awhite@pih.org'))
remDr$findElement(using='xpath', "//*/input[@id= 'password']")$sendKeysToElement(list('White0818'))
remDr$findElement(using='xpath', "//*/input[@id= 'formSubmit']")$clickElement()
for (m in 1:length(generic$Mailing.ID)) {
print(generic[m, 1])
remDr$navigate(paste0(url, generic[m,1]))
Sys.sleep(runif(1,2,4))
a <- htmlParse(remDr$getPageSource()[[1]], asText=T)
HTML(a,file = paste0('scraped/',generic[m,1],'.html'))
}
source('C:/Users/awhite/Dropbox/Liberia/Waiting Homes/test code.R')
source('C:/Users/awhite/Dropbox/Liberia/Waiting Homes/test code.R')
source('C:/Users/awhite/Dropbox/Liberia/Waiting Homes/test code.R')
shiny::runApp('Haiti/Costing/Shiny Analyzer')
library(shinydashboard)
shiny::runApp('Haiti/Costing/Shiny Analyzer')
shiny::runApp('Haiti/Costing/Shiny Analyzer')
m <- matrix(1:16, nrow=4, ncol=4)
m
diag(m)
diag(m[1:3, 1:3])
diag(m[2:4, 2:4])
m <- matrix(1:400, nrow=20, ncol=20)
diag(m[1:4, 1:4])
diag(m[1:5, 1:5])
diag(m[1:m4, 1:4])
m
diag(m[16:20, 1:4])
min_length <- 4
r_start <- min_length
r_end <- nrow(mat)
c_start <- min_length
mat <- m
r_start <- min_length
r_end <- nrow(mat)
c_start <- min_length
c_end <- ncol(mat)
test_piece <- function(current_cube, piece) {
# test if current piece can be placed
# if true, return position bounds
# if false, return false
cur_view <- examine_cube(current_cube)
d <- dim(piece$shape)
# need to find if there is a space with the same dims as
# the piece given
matches <- list()
pos <- unique(unlist(as.data.frame(cur_view$base)))
pos <- pos[!is.na(pos)]
for (i in pos) {
test <- cur_view$base == i
matches <- append(matches, fit_piece(d, test, c(i:(i + d[3] - 1))))
}
return(matches)
}
setwd("C:/Users/awhite/OneDrive/OneDrive - Partners in Health/DHIS2/DHIS2 will save us all/dhis2 package")
source('C:/Users/awhite/OneDrive/OneDrive - Partners in Health/DHIS2/DHIS2 will save us all/settings.R')
source('C:/Users/awhite/OneDrive/OneDrive - Partners in Health/DHIS2/DHIS2 will save us all/dhis2 package/settings.R')
vBoxManage('startvm "DHIS2 Clean Slate" --type headless')
getOptions('repos')
update.packages()
